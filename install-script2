#!/bin/bash

####### THIS SCRIPT IS FOR UEFI FIRMWARES #######

# Coloring
STEP="\e[36m"
WARNING="\e[33m"
ENDCOLORING="\e[0m"

# User Variables
rootPartition="sda3"  
#swapPartition="sda2"  
efiPartition="sda1"   
windowManager="i3"    
displayManager="sddm" 
installPackages="base base-devel linux linux-firmware git vim neovim neofetch 
                 xorg xorg-xprop xorg-xset sudo firefox man-db man-pages grub efibootmgr" # Packages to install
hostname="archlinux"  
username="user"       

# Load keyboard layout
loadkeys us

echo -e "$STEP Just create partitions without setting partition type $ENDCOLORING"
sleep 2
cfdisk

echo -e "$STEP Setting partition type $ENDCOLORING"
sleep 2
mkfs.ext4 /dev/$rootPartition
#mkswap /dev/$swapPartition
mkfs.fat -F 32 /dev/$efiPartition

# Mount partitions
mount /dev/$rootPartition /mnt
mount --mkdir /dev/$efiPartition /mnt/boot
#swapon /dev/$swapPartition

# Install base system and additional packages
pacstrap -K /mnt $installPackages $windowManager $displayManager

# Generate fstab
genfstab -U /mnt >> /mnt/etc/fstab

# Set timezone
ln -sf /usr/share/zoneinfo/UTC /mnt/etc/localtime

# Set locale
echo "LANG=en_US.UTF-8" >> /mnt/etc/locale.conf
echo "en_US.UTF-8 UTF-8" >> /mnt/etc/locale.gen
arch-chroot /mnt locale-gen

# Set hostname
echo $hostname >> /mnt/etc/hostname

# Set root password
echo -e "$WARNING Set root password $ENDCOLORING"
arch-chroot /mnt passwd

# Create a new user
arch-chroot /mnt useradd -m -G wheel -s /bin/bash $username
echo -e "$WARNING Set password for user $username $ENDCOLORING"
arch-chroot /mnt passwd $username

# Install and configure bootloader
arch-chroot /mnt grub-install --target=x86_64-efi --efi-directory=/boot --bootloader-id=GRUB
arch-chroot /mnt grub-mkconfig -o /boot/grub/grub.cfg

# Enable display manager
arch-chroot /mnt systemctl enable $displayManager

echo -e "$WARNING Installation complete! You can now reboot your system. $ENDCOLORING"
